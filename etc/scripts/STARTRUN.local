#!/bin/bash

export RCPORT=44000
[ "$1" != "" ] && RCPORT=$1

export HOSTIP=127.0.0.1
export TLUIP=127.0.0.1
export HOSTNAME=127.0.0.1

cd `dirname $0`
if [ -z "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH="`pwd`/lib"

else
  export LD_LIBRARY_PATH="`pwd`/lib:$LD_LIBRARY_PATH"
fi

printf '\033[1;32;48m \t STARTING DAQ LOCALLY\033[0m \n'
echo $(date)
printf '\033[22;33m\t Cleaning up first...  \033[0m \n'

if [ -f KILLRUN.local ]
then
    sh KILLRUN.local
else
    sh KILLRUN
fi

printf '\033[22;31m\t End of killall \033[0m \n'

sleep 1

######################################################################
if [ -n "`ls data/run*.raw`" ]
then
    printf '\033[22;33m\t Making sure all data files are properly writeprotected \033[0m \n'
    chmod a=rw data/run*.raw
    printf '\033[22;32m\t ...Done!\033[0m \n'
fi

cd bin
#=====================================================================
printf '\033[22;33m\t Starting Subprocesses \033[0m \n'
#=====================================================================
######################################################################
# euRun
###############
printf '\033[22;33m\t RunControl \033[0m \n'
./euRun -x 0 -y 0 -w 650 -g 550 -a tcp://$RCPORT &
sleep 1
######################################################################
# euLog
###############
printf '\033[22;33m\t Logger  \033[0m \n'
./euLog -x 0 -y 550 -w 1500 -g 450 -r tcp://$HOSTIP:44000 &
sleep 1
######################################################################
# DataCollector
###############
printf '\033[22;33m\t TestDataCollector \033[0m \n'
xterm -sb -sl 1000 -geom 80x10-480-900 -fn fixed -T "Data Collector" -e './TestDataCollector -r tcp://$HOSTIP:$RCPORT' &
sleep 1
######################################################################
# NI Producer
###############
if [ -f "NiProducer" ]
then
    printf '\033[22;33m\t  NiProducer for linux  \033[0m \n'
    xterm -sb -sl 1000 -geom 80x10-480-700 -T 'Ni Producer for Linux' -e './NiProducer -r tcp://$HOSTIP:$RCPORT' &
    sleep 1
else
    printf '\033[22;31m\t  NiProducer for linux not found!  \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_ni=ON" and re-run "make install" to install.'
fi
######################################################################
# TLU producer
###############
if [ -f "TLUProducer" ]
then
    printf '\033[22;33m\t  TLUProducer  \033[0m \n'
    xterm -sb -sl 1000 -geom 80x10-480-500 -T 'TLU Producer' -e './TLUProducer -r tcp://$TLUIP:$RCPORT' &
    sleep 1
else
    printf '\033[22;31m\t  TLUProducer not found! \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_tlu=ON" and re-run "make install" to install.'
fi
#####################################################################
######################################################################
# Online Monitor
###############
if [ -f "OnlineMon" ]
then
    printf '\033[22;33m\t  Online Monitor  \033[0m \n'
    ./OnlineMon  -sc 10 -s 0 -tc 0 -r tcp://$HOSTIP:$RCPORT &
else
    printf '\033[22;31m\t  Online monitor not found! \033[0m \n'
    echo 'Configure EUDAQ with the CMake option "-D BUILD_onlinemon=ON" and re-run "make install" to install.'
fi
#####################################################################


printf ' \n'
printf ' \n'
printf ' \n'
printf '\033[1;32;48m\t ...Done!\033[0m \n'
printf '\033[1;32;48mSTART OF DAQ COMPLETE\033[0m \n'
